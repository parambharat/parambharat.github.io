/*! tailwindcss v4.0.9 | MIT License | https://tailwindcss.com */
@import "https://fonts.googleapis.com/css2?family=Special+Elite&display=swap";

:root {
    --font-terminal: "Special Elite", Courier, monospace
}

.visible {
    visibility: visible
}

.absolute {
    position: absolute
}

.relative {
    position: relative
}

.sticky {
    position: sticky
}

.col-start-2 {
    grid-column-start: 2
}

.row-span-2 {
    grid-row: span 2/span 2
}

.row-start-1 {
    grid-row-start: 1
}

.row-start-2 {
    grid-row-start: 2
}

.clear-both {
    clear: both
}

.block {
    display: block
}

.contents {
    display: contents
}

.flex {
    display: flex
}

.grid {
    display: grid
}

.hidden {
    display: none
}

.inline {
    display: inline
}

.h-\[200px\] {
    height: 200px
}

.h-full {
    height: 100%
}

.h-screen {
    height: 100vh
}

.max-h-screen {
    max-height: 100vh
}

.min-h-screen {
    min-height: 100vh
}

.w-\[200px\] {
    width: 200px
}

.w-full {
    width: 100%
}

.flex-1 {
    flex: 1
}

.flex-shrink-0 {
    flex-shrink: 0
}

.list-none {
    list-style-type: none
}

.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr))
}

.grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr))
}

.grid-rows-\[auto_1fr_auto\] {
    grid-template-rows: auto 1fr auto
}

.flex-wrap {
    flex-wrap: wrap
}

.items-center {
    align-items: center
}

.items-start {
    align-items: flex-start
}

.justify-between {
    justify-content: space-between
}

.justify-center {
    justify-content: center
}

.overflow-auto {
    overflow: auto
}

.border {
    border-style: var(--tw-border-style);
    border-width: 1px
}

.border-0 {
    border-style: var(--tw-border-style);
    border-width: 0
}

.border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px
}

.border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px
}

.border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px
}

.border-b-0 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0
}

.border-none {
    --tw-border-style: none;
    border-style: none
}

.text-center {
    text-align: center
}

.text-left {
    text-align: left
}

.italic {
    font-style: italic
}

.no-underline {
    text-decoration-line: none
}

.outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px
}

.grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
}

.transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s)
}

.duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s
}

.duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s
}

@media (hover:hover) {
    .hover\:border-b:hover {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px
    }

    .hover\:border-dashed:hover {
        --tw-border-style: dashed;
        border-style: dashed
    }

    .hover\:underline:hover {
        text-decoration-line: underline
    }
}

.terminal-prompt {
    color: #38bdf8;
    margin-right: .5rem;
    font-weight: 700
}

.typing-cursor {
    vertical-align: middle;
    color: #38bdf8;
    margin-left: 1px;
    animation: .8s step-end infinite blink;
    display: inline-block
}

@keyframes blink {

    0%,
    to {
        opacity: 1
    }

    50% {
        opacity: 0
    }
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}